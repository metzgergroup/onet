# Secret variables
# DATABASE_INTEGRATED_BUILD_TOKEN

image: registry.gitlab.com/metzger-group/docker-git-lfs:latest

services:
  - docker:dind

stages:
  - build
  - deploy

variables:
  IMAGE_COMMIT: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  IMAGE_LATEST: $CI_REGISTRY_IMAGE:latest
  POSTGRES_VERSION: 9.6.3-alpine
  POSTGRES_DB: onet

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  - export VERSION_TAG=$(echo $CI_COMMIT_TAG | sed -r 's/v([0-9]+\.[0-9]+\.[0-9]+.*)/\1/')
  - export IMAGE_VERSION=$CI_REGISTRY_IMAGE:$VERSION_TAG

build:
  stage: build
  script:
    - apk add --no-cache bash bash-doc bash-completion unzip sed
    - git lfs pull
    - unzip -j docker-scripts/*.zip -d docker-scripts
    - bash fix_source_files.sh
    - docker network create build_network
    - docker volume create --name data
    - docker run -d --name db --volume data:/var/lib/postgresql/data --volume $(pwd)/docker-scripts:/docker-entrypoint-initdb.d --env POSTGRES_DB=$POSTGRES_DB --network build_network postgres:$POSTGRES_VERSION
    - until docker run --rm --network build_network postgres:$POSTGRES_VERSION psql --host db --username postgres --dbname $POSTGRES_DB --command "select 1"; do sleep 10; done
    - docker stop db
    - mkdir backup
    - docker run --rm --volume data:/data --volume $(pwd)/backup:/backup --network build_network debian:stretch bash -c "tar -cvpzf /backup/data.tar.gz -C /data . && echo 'Backup complete'"
    - docker build --tag $IMAGE_COMMIT .
    - docker run --rm $IMAGE_COMMIT bash -c 'test -f $PGDATA/PG_VERSION'
    - docker tag $IMAGE_COMMIT $IMAGE_VERSION
    - docker tag $IMAGE_COMMIT $IMAGE_LATEST
    - docker push $IMAGE_VERSION
    - docker push $IMAGE_LATEST
  only:
    - tags

trigger_build:
  stage: deploy
  script:
    - >-
      docker run
      --rm
      appropriate/curl
      -X POST
      -F token=$DATABASE_INTEGRATED_BUILD_TOKEN
      -F ref=master
      https://gitlab.com/api/v4/projects/2702529/trigger/pipeline
  only:
    - tags
